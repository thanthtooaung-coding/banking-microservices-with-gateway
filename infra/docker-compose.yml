version: "3.8"
services:
  postgresSQL:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: bankdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - banknet
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bankdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    networks:
      - banknet
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ../user-service
    depends_on:
      postgresSQL:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - banknet
    ports:
      - "8081:8081"

  account-service:
    build: ../account-service
    depends_on:
      postgresSQL:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - banknet
    ports:
      - "8082:8082"

  gateway-service:
    build: ../gateway-service
    depends_on:
      user-service:
        condition: service_started
      account-service:
        condition: service_started
      kafka:
        condition: service_healthy
    networks:
      - banknet
    ports:
      - "8080:8080"

networks:
  banknet:
    driver: bridge

volumes:
  pgdata:
  